
// Automatically generated from LVGL source with `python3 preprocessor.py`
// Extract function signatures from LVGL APIs in headers

// Custom Tasmota functions
void lv_img_set_tasmota_logo(lv_obj_t * img);

// ======================================================================
// Artificial
// ======================================================================

lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t mix);

// ======================================================================
// LV top level functions
// ======================================================================

// resolution
lv_coord_t lv_get_hor_res(void);
lv_coord_t lv_get_ver_res(void);

// layers
//static inline lv_obj_t * lv_layer_sys(void);
//static inline lv_obj_t * lv_layer_top(void);

// ======================================================================
// Generated from headers
// ======================================================================


// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_disp.h
lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp)
lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp)
void lv_disp_load_scr(lv_obj_t * scr)
lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp)
lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp)
void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th)
lv_theme_t * lv_disp_get_theme(lv_disp_t * disp)
void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color)
void lv_disp_set_bg_image(lv_disp_t * disp, const void * img_src)
void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa)
void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, bool auto_del)
uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp)
void lv_disp_trig_activity(lv_disp_t * disp)
void lv_disp_clean_dcache(lv_disp_t * disp)
static inline lv_obj_t * lv_scr_act(void)
static inline lv_obj_t * lv_layer_top(void)
static inline lv_obj_t * lv_layer_sys(void)
static inline void lv_scr_load(lv_obj_t * scr)
static inline lv_coord_t lv_dpx(lv_coord_t n)
static inline lv_coord_t lv_disp_dpx(const lv_disp_t * disp, lv_coord_t n)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_event.h
lv_res_t lv_event_send(struct _lv_obj_t * obj, lv_event_code_t event_code, void * param)
lv_res_t lv_obj_event_base(const lv_obj_class_t * class_p, lv_event_t * e)
uint32_t lv_event_register_id(void)
struct _lv_event_dsc_t * lv_obj_add_event_cb(struct _lv_obj_t * obj, lv_event_cb_t event_cb, lv_event_code_t filter, void * user_data)
bool lv_obj_remove_event_cb(struct _lv_obj_t * obj, lv_event_cb_t event_cb)
bool lv_obj_remove_event_dsc(struct _lv_obj_t * obj, struct _lv_event_dsc_t * event_dsc)
void lv_event_set_ext_draw_size(lv_event_t * e, lv_coord_t size)
void lv_event_set_cover_res(lv_event_t * e, lv_cover_res_t res)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_group.h
lv_group_t * lv_group_create(void)
void lv_group_del(lv_group_t * group)
void lv_group_set_default(lv_group_t * group)
lv_group_t * lv_group_get_default(void)
void lv_group_add_obj(lv_group_t * group, struct _lv_obj_t * obj)
void lv_group_remove_obj(struct _lv_obj_t * obj)
void lv_group_remove_all_objs(lv_group_t * group)
void lv_group_focus_obj(struct _lv_obj_t * obj)
void lv_group_focus_next(lv_group_t * group)
void lv_group_focus_prev(lv_group_t * group)
void lv_group_focus_freeze(lv_group_t * group, bool en)
lv_res_t lv_group_send_data(lv_group_t * group, uint32_t c)
void lv_group_set_focus_cb(lv_group_t * group, lv_group_focus_cb_t focus_cb)
void lv_group_set_refocus_policy(lv_group_t * group, lv_group_refocus_policy_t policy)
void lv_group_set_editing(lv_group_t * group, bool edit)
void lv_group_set_wrap(lv_group_t * group, bool en)
struct _lv_obj_t * lv_group_get_focused(const lv_group_t * group)
lv_group_focus_cb_t lv_group_get_focus_cb(const lv_group_t * group)
bool lv_group_get_editing(const lv_group_t * group)
bool lv_group_get_wrap(lv_group_t * group)
uint32_t lv_group_get_obj_count(lv_group_t * group)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_indev.h
void lv_indev_read_timer_cb(lv_timer_t * timer)
void lv_indev_enable(lv_indev_t * indev, bool en)
lv_indev_t * lv_indev_get_act(void)
lv_indev_type_t lv_indev_get_type(const lv_indev_t * indev)
void lv_indev_reset(lv_indev_t * indev, lv_obj_t * obj)
void lv_indev_reset_long_press(lv_indev_t * indev)
void lv_indev_set_cursor(lv_indev_t * indev, lv_obj_t * cur_obj)
void lv_indev_set_group(lv_indev_t * indev, lv_group_t * group)
void lv_indev_set_button_points(lv_indev_t * indev, const lv_point_t points[])
void lv_indev_get_point(const lv_indev_t * indev, lv_point_t * point)
lv_dir_t lv_indev_get_gesture_dir(const lv_indev_t * indev)
uint32_t lv_indev_get_key(const lv_indev_t * indev)
lv_dir_t lv_indev_get_scroll_dir(const lv_indev_t * indev)
lv_obj_t * lv_indev_get_scroll_obj(const lv_indev_t * indev)
void lv_indev_get_vect(const lv_indev_t * indev, lv_point_t * point)
void lv_indev_wait_release(lv_indev_t * indev)
lv_obj_t * lv_indev_get_obj_act(void)
lv_timer_t * lv_indev_get_read_timer(lv_disp_t * indev)
lv_obj_t * lv_indev_search_obj(lv_obj_t * obj, lv_point_t * point)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_indev_scroll.h

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_obj.h
lv_obj_t * lv_obj_create(lv_obj_t * parent)
void lv_obj_add_flag(lv_obj_t * obj, lv_obj_flag_t f)
void lv_obj_clear_flag(lv_obj_t * obj, lv_obj_flag_t f)
void lv_obj_add_state(lv_obj_t * obj, lv_state_t state)
void lv_obj_clear_state(lv_obj_t * obj, lv_state_t state)
static inline void lv_obj_set_user_data(lv_obj_t * obj, void * user_data)
bool lv_obj_has_flag(const lv_obj_t * obj, lv_obj_flag_t f)
bool lv_obj_has_flag_any(const lv_obj_t * obj, lv_obj_flag_t f)
lv_state_t lv_obj_get_state(const lv_obj_t * obj)
bool lv_obj_has_state(const lv_obj_t * obj, lv_state_t state)
void * lv_obj_get_group(const lv_obj_t * obj)
static inline void * lv_obj_get_user_data(lv_obj_t * obj)
void lv_obj_allocate_spec_attr(lv_obj_t * obj)
bool lv_obj_check_type(const lv_obj_t * obj, const lv_obj_class_t * class_p)
bool lv_obj_has_class(const lv_obj_t * obj, const lv_obj_class_t * class_p)
const lv_obj_class_t * lv_obj_get_class(const lv_obj_t * obj)
bool lv_obj_is_valid(const lv_obj_t * obj)
static inline lv_coord_t lv_obj_dpx(const lv_obj_t * obj, lv_coord_t n)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_obj_class.h
struct _lv_obj_t * lv_obj_class_create_obj(const struct _lv_obj_class_t * class_p, struct _lv_obj_t * parent)
void lv_obj_class_init_obj(struct _lv_obj_t * obj)
bool lv_obj_is_editable(struct _lv_obj_t * obj)
bool lv_obj_is_group_def(struct _lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_obj_draw.h
void lv_obj_init_draw_rect_dsc(struct _lv_obj_t * obj, uint32_t part, lv_draw_rect_dsc_t * draw_dsc)
void lv_obj_init_draw_label_dsc(struct _lv_obj_t * obj, uint32_t part, lv_draw_label_dsc_t * draw_dsc)
void lv_obj_init_draw_img_dsc(struct _lv_obj_t * obj, uint32_t part, lv_draw_img_dsc_t * draw_dsc)
void lv_obj_init_draw_line_dsc(struct _lv_obj_t * obj, uint32_t part, lv_draw_line_dsc_t * draw_dsc)
void lv_obj_init_draw_arc_dsc(struct _lv_obj_t * obj, uint32_t part, lv_draw_arc_dsc_t * draw_dsc)
lv_coord_t lv_obj_calculate_ext_draw_size(struct _lv_obj_t * obj, uint32_t part)
void lv_obj_draw_dsc_init(lv_obj_draw_part_dsc_t * dsc, const lv_area_t * clip_area)
void lv_obj_refresh_ext_draw_size(struct _lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_obj_pos.h
void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y)
void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x)
void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y)
void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h)
bool lv_obj_refr_size(struct _lv_obj_t * obj)
void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w)
void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h)
void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w)
void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h)
void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout)
bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj)
void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj)
void lv_obj_update_layout(const struct _lv_obj_t * obj)
uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data)
void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align)
void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs)
void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs)
static inline void lv_obj_center(struct _lv_obj_t * obj)
void lv_obj_get_coords(const struct _lv_obj_t * obj, lv_area_t * coords)
lv_coord_t lv_obj_get_x(const struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_x2(const struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_y(const struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_y2(const struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_width(const struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_height(const struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_content_width(const struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_content_height(const struct _lv_obj_t * obj)
void lv_obj_get_content_coords(const struct _lv_obj_t * obj, lv_area_t * area)
lv_coord_t lv_obj_get_self_width(const struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_self_height(const struct _lv_obj_t * obj)
bool lv_obj_refresh_self_size(struct _lv_obj_t * obj)
void lv_obj_refr_pos(struct _lv_obj_t * obj)
void lv_obj_move_to(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y)
void lv_obj_move_children_by(struct _lv_obj_t * obj, lv_coord_t x_diff, lv_coord_t y_diff, bool ignore_floating)
void lv_obj_invalidate_area(const struct _lv_obj_t * obj, const lv_area_t * area)
void lv_obj_invalidate(const struct _lv_obj_t * obj)
bool lv_obj_area_is_visible(const struct _lv_obj_t * obj, lv_area_t * area)
bool lv_obj_is_visible(const struct _lv_obj_t * obj)
void lv_obj_set_ext_click_area(struct _lv_obj_t * obj, lv_coord_t size)
void lv_obj_get_click_area(const struct _lv_obj_t * obj, lv_area_t * area)
bool lv_obj_hit_test(struct _lv_obj_t * obj, const lv_point_t * point)
lv_coord_t lv_clamp_width(lv_coord_t width, lv_coord_t min_width, lv_coord_t max_width, lv_coord_t ref_width)
lv_coord_t lv_clamp_height(lv_coord_t height, lv_coord_t min_height, lv_coord_t max_height, lv_coord_t ref_height)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_obj_scroll.h
void lv_obj_set_scrollbar_mode(struct _lv_obj_t * obj, lv_scrollbar_mode_t mode)
void lv_obj_set_scroll_dir(struct _lv_obj_t * obj, lv_dir_t dir)
void lv_obj_set_scroll_snap_x(struct _lv_obj_t * obj, lv_scroll_snap_t align)
void lv_obj_set_scroll_snap_y(struct _lv_obj_t * obj, lv_scroll_snap_t align)
lv_scrollbar_mode_t lv_obj_get_scrollbar_mode(const struct _lv_obj_t * obj)
lv_dir_t lv_obj_get_scroll_dir(const struct _lv_obj_t * obj)
lv_scroll_snap_t lv_obj_get_scroll_snap_x(const struct _lv_obj_t * obj)
lv_scroll_snap_t lv_obj_get_scroll_snap_y(const struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_scroll_x(const struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_scroll_y(const struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_scroll_top(struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_scroll_bottom(struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_scroll_left(struct _lv_obj_t * obj)
lv_coord_t lv_obj_get_scroll_right(struct _lv_obj_t * obj)
void lv_obj_get_scroll_end(struct _lv_obj_t * obj, lv_point_t * end)
void lv_obj_scroll_by(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y, lv_anim_enable_t anim_en)
void lv_obj_scroll_to(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y, lv_anim_enable_t anim_en)
void lv_obj_scroll_to_x(struct _lv_obj_t * obj, lv_coord_t x, lv_anim_enable_t anim_en)
void lv_obj_scroll_to_y(struct _lv_obj_t * obj, lv_coord_t y, lv_anim_enable_t anim_en)
void lv_obj_scroll_to_view(struct _lv_obj_t * obj, lv_anim_enable_t anim_en)
void lv_obj_scroll_to_view_recursive(struct _lv_obj_t * obj, lv_anim_enable_t anim_en)
bool lv_obj_is_scrolling(const struct _lv_obj_t * obj)
void lv_obj_update_snap(struct _lv_obj_t * obj, lv_anim_enable_t anim_en)
void lv_obj_get_scrollbar_area(struct _lv_obj_t * obj, lv_area_t * hor, lv_area_t * ver)
void lv_obj_scrollbar_invalidate(struct _lv_obj_t * obj)
void lv_obj_readjust_scroll(struct _lv_obj_t * obj, lv_anim_enable_t anim_en)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_obj_style.h
void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector)
void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector)
static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
void lv_obj_report_style_change(lv_style_t * style)
void lv_obj_refresh_style(struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop)
void lv_obj_enable_style_refresh(bool en)
lv_style_value_t lv_obj_get_style_prop(const struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop)
void lv_obj_set_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t value, lv_style_selector_t selector)
lv_res_t lv_obj_get_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t * value, lv_style_selector_t selector)
bool lv_obj_remove_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_selector_t selector)
void lv_obj_fade_in(struct _lv_obj_t * obj, uint32_t time, uint32_t delay)
void lv_obj_fade_out(struct _lv_obj_t * obj, uint32_t time, uint32_t delay)
lv_state_t lv_obj_style_get_selector_state(lv_style_selector_t selector)
lv_part_t lv_obj_style_get_selector_part(lv_style_selector_t selector)
static inline void lv_obj_set_style_pad_all(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
static inline void lv_obj_set_style_pad_hor(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
static inline void lv_obj_set_style_pad_ver(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
static inline void lv_obj_set_style_pad_gap(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
static inline void lv_obj_set_style_size(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_obj_style_gen.h
static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_min_width(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_max_width(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_height(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_min_height(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_max_height(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_x(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_y(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_align_t lv_obj_get_style_align(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_transform_width(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_transform_height(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_translate_x(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_translate_y(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_transform_zoom(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_transform_angle(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_pad_top(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_pad_bottom(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_pad_left(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_pad_right(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_pad_row(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_pad_column(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_radius(const struct _lv_obj_t * obj, uint32_t part)
static inline bool lv_obj_get_style_clip_corner(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline const lv_color_filter_dsc_t * lv_obj_get_style_color_filter_dsc(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_color_filter_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline uint32_t lv_obj_get_style_anim_time(const struct _lv_obj_t * obj, uint32_t part)
static inline uint32_t lv_obj_get_style_anim_speed(const struct _lv_obj_t * obj, uint32_t part)
static inline const lv_style_transition_dsc_t * lv_obj_get_style_transition(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_blend_mode_t lv_obj_get_style_blend_mode(const struct _lv_obj_t * obj, uint32_t part)
static inline uint16_t lv_obj_get_style_layout(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_base_dir_t lv_obj_get_style_base_dir(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_bg_color(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_bg_color_filtered(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_bg_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_bg_grad_color(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_bg_grad_color_filtered(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_grad_dir_t lv_obj_get_style_bg_grad_dir(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_bg_main_stop(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_bg_grad_stop(const struct _lv_obj_t * obj, uint32_t part)
static inline const void * lv_obj_get_style_bg_img_src(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_bg_img_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_bg_img_recolor(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_bg_img_recolor_filtered(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_bg_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline bool lv_obj_get_style_bg_img_tiled(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_border_color(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_border_color_filtered(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_border_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_border_width(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_border_side_t lv_obj_get_style_border_side(const struct _lv_obj_t * obj, uint32_t part)
static inline bool lv_obj_get_style_border_post(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_text_color(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_text_color_filtered(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_text_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline const lv_font_t * lv_obj_get_style_text_font(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_text_letter_space(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_text_line_space(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_text_decor_t lv_obj_get_style_text_decor(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_text_align_t lv_obj_get_style_text_align(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_img_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_img_recolor(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_img_recolor_filtered(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_outline_width(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_outline_color(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_outline_color_filtered(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_outline_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_outline_pad(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_shadow_width(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_shadow_ofs_x(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_shadow_ofs_y(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_shadow_spread(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_shadow_color(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_shadow_color_filtered(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_shadow_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_line_width(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_line_dash_width(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_line_dash_gap(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_line_rounded(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_line_color(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_line_color_filtered(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_line_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_arc_width(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_coord_t lv_obj_get_style_arc_rounded(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_arc_color(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_color_t lv_obj_get_style_arc_color_filtered(const struct _lv_obj_t * obj, uint32_t part)
static inline lv_opa_t lv_obj_get_style_arc_opa(const struct _lv_obj_t * obj, uint32_t part)
static inline const void * lv_obj_get_style_arc_img_src(const struct _lv_obj_t * obj, uint32_t part)
void lv_obj_set_style_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_min_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_max_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_height(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_min_height(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_max_height(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_x(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_y(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_align(struct _lv_obj_t * obj, lv_align_t value, lv_style_selector_t selector)
void lv_obj_set_style_transform_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_transform_height(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_translate_x(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_translate_y(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_transform_zoom(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_transform_angle(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_pad_top(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_pad_bottom(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_pad_left(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_pad_right(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_pad_row(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_pad_column(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_radius(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_clip_corner(struct _lv_obj_t * obj, bool value, lv_style_selector_t selector)
void lv_obj_set_style_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_color_filter_dsc(struct _lv_obj_t * obj, const lv_color_filter_dsc_t * value, lv_style_selector_t selector)
void lv_obj_set_style_color_filter_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_anim_time(struct _lv_obj_t * obj, uint32_t value, lv_style_selector_t selector)
void lv_obj_set_style_anim_speed(struct _lv_obj_t * obj, uint32_t value, lv_style_selector_t selector)
void lv_obj_set_style_transition(struct _lv_obj_t * obj, const lv_style_transition_dsc_t * value, lv_style_selector_t selector)
void lv_obj_set_style_blend_mode(struct _lv_obj_t * obj, lv_blend_mode_t value, lv_style_selector_t selector)
void lv_obj_set_style_layout(struct _lv_obj_t * obj, uint16_t value, lv_style_selector_t selector)
void lv_obj_set_style_base_dir(struct _lv_obj_t * obj, lv_base_dir_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_grad_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_grad_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_grad_dir(struct _lv_obj_t * obj, lv_grad_dir_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_main_stop(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_grad_stop(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_img_src(struct _lv_obj_t * obj, const void * value, lv_style_selector_t selector)
void lv_obj_set_style_bg_img_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_img_recolor(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_img_recolor_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_img_recolor_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_bg_img_tiled(struct _lv_obj_t * obj, bool value, lv_style_selector_t selector)
void lv_obj_set_style_border_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_border_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_border_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_border_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_border_side(struct _lv_obj_t * obj, lv_border_side_t value, lv_style_selector_t selector)
void lv_obj_set_style_border_post(struct _lv_obj_t * obj, bool value, lv_style_selector_t selector)
void lv_obj_set_style_text_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_text_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_text_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_text_font(struct _lv_obj_t * obj, const lv_font_t * value, lv_style_selector_t selector)
void lv_obj_set_style_text_letter_space(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_text_line_space(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_text_decor(struct _lv_obj_t * obj, lv_text_decor_t value, lv_style_selector_t selector)
void lv_obj_set_style_text_align(struct _lv_obj_t * obj, lv_text_align_t value, lv_style_selector_t selector)
void lv_obj_set_style_img_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_img_recolor(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_img_recolor_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_img_recolor_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_outline_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_outline_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_outline_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_outline_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_outline_pad(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_shadow_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_shadow_ofs_x(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_shadow_ofs_y(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_shadow_spread(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_shadow_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_shadow_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_shadow_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_line_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_line_dash_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_line_dash_gap(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_line_rounded(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_line_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_line_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_line_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_arc_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_arc_rounded(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)
void lv_obj_set_style_arc_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_arc_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)
void lv_obj_set_style_arc_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)
void lv_obj_set_style_arc_img_src(struct _lv_obj_t * obj, const void * value, lv_style_selector_t selector)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_obj_tree.h
void lv_obj_del(struct _lv_obj_t * obj)
void lv_obj_clean(struct _lv_obj_t * obj)
void lv_obj_del_anim_ready_cb(lv_anim_t * a)
void lv_obj_del_async(struct _lv_obj_t * obj)
void lv_obj_set_parent(struct _lv_obj_t * obj, struct _lv_obj_t * parent)
void lv_obj_move_foreground(struct _lv_obj_t * obj)
void lv_obj_move_background(struct _lv_obj_t * obj)
struct _lv_obj_t * lv_obj_get_screen(const struct _lv_obj_t * obj)
lv_disp_t * lv_obj_get_disp(const struct _lv_obj_t * obj)
struct _lv_obj_t * lv_obj_get_parent(const struct _lv_obj_t * obj)
struct _lv_obj_t * lv_obj_get_child(const struct _lv_obj_t * obj, int32_t id)
uint32_t lv_obj_get_child_cnt(const struct _lv_obj_t * obj)
uint32_t lv_obj_get_child_id(const struct _lv_obj_t * obj)
void lv_obj_tree_walk(struct _lv_obj_t * start_obj, lv_obj_tree_walk_cb_t cb, void * user_data)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_refr.h
void lv_refr_now(lv_disp_t * disp)

// ../../lib/libesp32_lvgl/LVGL8/src/core/lv_theme.h
lv_theme_t * lv_theme_get_from_obj(lv_obj_t * obj)
void lv_theme_apply(lv_obj_t * obj)
void lv_theme_set_parent(lv_theme_t * new_theme, lv_theme_t * parent)
void lv_theme_set_apply_cb(lv_theme_t * theme, lv_theme_apply_cb_t apply_cb)
const lv_font_t * lv_theme_get_font_small(lv_obj_t * obj)
const lv_font_t * lv_theme_get_font_normal(lv_obj_t * obj)
const lv_font_t * lv_theme_get_font_large(lv_obj_t * obj)
lv_color_t lv_theme_get_color_primary(lv_obj_t * obj)
lv_color_t lv_theme_get_color_secondary(lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/draw/lv_draw.h

// ../../lib/libesp32_lvgl/LVGL8/src/draw/lv_draw_arc.h
void lv_draw_arc_dsc_init(lv_draw_arc_dsc_t * dsc)
void lv_draw_arc(lv_coord_t center_x, lv_coord_t center_y, uint16_t radius, uint16_t start_angle, uint16_t end_angle, const lv_area_t * clip_area, const lv_draw_arc_dsc_t * dsc)
void lv_draw_arc_get_area(lv_coord_t x, lv_coord_t y, uint16_t radius, uint16_t start_angle, uint16_t end_angle, lv_coord_t w, bool rounded, lv_area_t * area)

// ../../lib/libesp32_lvgl/LVGL8/src/draw/lv_draw_blend.h

// ../../lib/libesp32_lvgl/LVGL8/src/draw/lv_draw_img.h
void lv_draw_img_dsc_init(lv_draw_img_dsc_t * dsc)
void lv_draw_img(const lv_area_t * coords, const lv_area_t * mask, const void * src, const lv_draw_img_dsc_t * dsc)
lv_img_src_t lv_img_src_get_type(const void * src)

// ../../lib/libesp32_lvgl/LVGL8/src/draw/lv_draw_label.h
void lv_draw_label_dsc_init(lv_draw_label_dsc_t * dsc)
void lv_draw_label(const lv_area_t * coords, const lv_area_t * mask, const lv_draw_label_dsc_t * dsc, const char * txt, lv_draw_label_hint_t * hint)
void lv_draw_letter(const lv_point_t * pos_p, const lv_area_t * clip_area, const lv_font_t * font_p, uint32_t letter, lv_color_t color, lv_opa_t opa, lv_blend_mode_t blend_mode)

// ../../lib/libesp32_lvgl/LVGL8/src/draw/lv_draw_line.h
void lv_draw_line(const lv_point_t * point1, const lv_point_t * point2, const lv_area_t * clip, const lv_draw_line_dsc_t * dsc)
void lv_draw_line_dsc_init(lv_draw_line_dsc_t * dsc)

// ../../lib/libesp32_lvgl/LVGL8/src/draw/lv_draw_mask.h
static inline uint8_t lv_draw_mask_get_cnt(void)
int16_t lv_draw_mask_add(void * param, void * custom_id)
lv_draw_mask_res_t lv_draw_mask_apply(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y, lv_coord_t len)
void * lv_draw_mask_remove_id(int16_t id)
void * lv_draw_mask_remove_custom(void * custom_id)
uint8_t lv_draw_mask_get_cnt(void)
void lv_draw_mask_line_points_init(lv_draw_mask_line_param_t * param, lv_coord_t p1x, lv_coord_t p1y, lv_coord_t p2x, lv_coord_t p2y, lv_draw_mask_line_side_t side)
void lv_draw_mask_line_angle_init(lv_draw_mask_line_param_t * param, lv_coord_t p1x, lv_coord_t py, int16_t angle, lv_draw_mask_line_side_t side)
void lv_draw_mask_angle_init(lv_draw_mask_angle_param_t * param, lv_coord_t vertex_x, lv_coord_t vertex_y, lv_coord_t start_angle, lv_coord_t end_angle)
void lv_draw_mask_radius_init(lv_draw_mask_radius_param_t * param, const lv_area_t * rect, lv_coord_t radius, bool inv)
void lv_draw_mask_fade_init(lv_draw_mask_fade_param_t * param, const lv_area_t * coords, lv_opa_t opa_top, lv_coord_t y_top, lv_opa_t opa_bottom, lv_coord_t y_bottom)
void lv_draw_mask_map_init(lv_draw_mask_map_param_t * param, const lv_area_t * coords, const lv_opa_t * map)

// ../../lib/libesp32_lvgl/LVGL8/src/draw/lv_draw_rect.h
void lv_draw_rect_dsc_init(lv_draw_rect_dsc_t * dsc)
void lv_draw_rect(const lv_area_t * coords, const lv_area_t * mask, const lv_draw_rect_dsc_t * dsc)

// ../../lib/libesp32_lvgl/LVGL8/src/draw/lv_draw_triangle.h
void lv_draw_triangle(const lv_point_t points[], const lv_area_t * clip, const lv_draw_rect_dsc_t * draw_dsc)
void lv_draw_polygon(const lv_point_t points[], uint16_t point_cnt, const lv_area_t * mask, const lv_draw_rect_dsc_t * draw_dsc)

// ../../lib/libesp32_lvgl/LVGL8/src/draw/lv_img_buf.h

// ../../lib/libesp32_lvgl/LVGL8/src/draw/lv_img_cache.h

// ../../lib/libesp32_lvgl/LVGL8/src/draw/lv_img_decoder.h

// ../../lib/libesp32_lvgl/LVGL8/src/extra/themes/default/lv_theme_default.h
lv_theme_t * lv_theme_default_init(lv_disp_t * disp, lv_color_t color_primary, lv_color_t color_secondary, bool dark, const lv_font_t * font)
bool lv_theme_default_is_inited(void)

// ../../lib/libesp32_lvgl/LVGL8/src/extra/themes/mono/lv_theme_mono.h
lv_theme_t * lv_theme_mono_init(lv_disp_t * disp, bool dark_bg, const lv_font_t * font)

// ../../lib/libesp32_lvgl/LVGL8/src/extra/widgets/chart/lv_chart.h
lv_obj_t * lv_chart_create(lv_obj_t * parent)
void lv_chart_set_type(lv_obj_t * obj, lv_chart_type_t type)
void lv_chart_set_point_count(lv_obj_t * obj, uint16_t cnt)
void lv_chart_set_range(lv_obj_t * obj, lv_chart_axis_t axis, lv_coord_t min, lv_coord_t max)
void lv_chart_set_update_mode(lv_obj_t * obj, lv_chart_update_mode_t update_mode)
void lv_chart_set_div_line_count(lv_obj_t * obj, uint8_t hdiv, uint8_t vdiv)
void lv_chart_set_zoom_x(lv_obj_t * obj, uint16_t zoom_x)
void lv_chart_set_zoom_y(lv_obj_t * obj, uint16_t zoom_y)
uint16_t lv_chart_get_zoom_x(const lv_obj_t * obj)
uint16_t lv_chart_get_zoom_y(const lv_obj_t * obj)
void lv_chart_set_axis_tick(lv_obj_t * obj, lv_chart_axis_t axis, lv_coord_t major_len, lv_coord_t minor_len, lv_coord_t major_cnt, lv_coord_t minor_cnt, bool label_en, lv_coord_t draw_size)
lv_chart_type_t lv_chart_get_type(const lv_obj_t * obj)
uint16_t lv_chart_get_point_count(const lv_obj_t * obj)
uint16_t lv_chart_get_x_start_point(const lv_obj_t * obj, lv_chart_series_t * ser)
void lv_chart_get_point_pos_by_id(lv_obj_t * obj, lv_chart_series_t * ser, uint16_t id, lv_point_t * p_out)
void lv_chart_refresh(lv_obj_t * obj)
lv_chart_series_t * lv_chart_add_series(lv_obj_t * obj, lv_color_t color, lv_chart_axis_t axis)
void lv_chart_remove_series(lv_obj_t * obj, lv_chart_series_t * series)
void lv_chart_hide_series(lv_obj_t * chart, lv_chart_series_t * series, bool hide)
void lv_chart_set_series_color(lv_obj_t * chart, lv_chart_series_t * series, lv_color_t color)
void lv_chart_set_x_start_point(lv_obj_t * obj, lv_chart_series_t * ser, uint16_t id)
lv_chart_series_t * lv_chart_get_series_next(const lv_obj_t * chart, const lv_chart_series_t * ser)
lv_chart_cursor_t * lv_chart_add_cursor(lv_obj_t * obj, lv_color_t color, lv_dir_t dir)
void lv_chart_set_cursor_pos(lv_obj_t * chart, lv_chart_cursor_t * cursor, lv_point_t * pos)
void lv_chart_set_cursor_point(lv_obj_t * chart, lv_chart_cursor_t * cursor, lv_chart_series_t * ser, uint16_t point_id)
lv_point_t lv_chart_get_cursor_point(lv_obj_t * chart, lv_chart_cursor_t * cursor)
void lv_chart_set_all_value(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t value)
void lv_chart_set_next_value(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t value)
void lv_chart_set_next_value2(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t x_value, lv_coord_t y_value)
void lv_chart_set_value_by_id(lv_obj_t * obj, lv_chart_series_t * ser, uint16_t id, lv_coord_t value)
void lv_chart_set_value_by_id2(lv_obj_t * obj, lv_chart_series_t * ser, uint16_t id, lv_coord_t x_value, lv_coord_t y_value)
void lv_chart_set_ext_y_array(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t array[])
void lv_chart_set_ext_x_array(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t array[])
lv_coord_t * lv_chart_get_y_array(const lv_obj_t * obj, lv_chart_series_t * ser)
lv_coord_t * lv_chart_get_x_array(const lv_obj_t * obj, lv_chart_series_t * ser)
uint32_t lv_chart_get_pressed_point(const lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/extra/widgets/colorwheel/lv_colorwheel.h
lv_obj_t * lv_colorwheel_create(lv_obj_t * parent, bool knob_recolor)
bool lv_colorwheel_set_hsv(lv_obj_t * obj, lv_color_hsv_t hsv)
bool lv_colorwheel_set_rgb(lv_obj_t * obj, lv_color_t color)
void lv_colorwheel_set_mode(lv_obj_t * obj, lv_colorwheel_mode_t mode)
void lv_colorwheel_set_mode_fixed(lv_obj_t * obj, bool fixed)
lv_color_hsv_t lv_colorwheel_get_hsv(lv_obj_t * obj)
lv_color_t lv_colorwheel_get_rgb(lv_obj_t * obj)
lv_colorwheel_mode_t lv_colorwheel_get_color_mode(lv_obj_t * obj)
bool lv_colorwheel_get_color_mode_fixed(lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/extra/widgets/imgbtn/lv_imgbtn.h
lv_obj_t * lv_imgbtn_create(lv_obj_t * parent)
void lv_imgbtn_set_src(lv_obj_t * imgbtn, lv_imgbtn_state_t state, const void * src_left, const void * src_mid, const void * src_right)

// ../../lib/libesp32_lvgl/LVGL8/src/extra/widgets/led/lv_led.h
lv_obj_t * lv_led_create(lv_obj_t * parent)
void lv_led_set_color(lv_obj_t * led, lv_color_t color)
void lv_led_set_brightness(lv_obj_t * led, uint8_t bright)
void lv_led_on(lv_obj_t * led)
void lv_led_off(lv_obj_t * led)
void lv_led_toggle(lv_obj_t * led)
uint8_t lv_led_get_brightness(const lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/extra/widgets/meter/lv_meter.h
lv_obj_t * lv_meter_create(lv_obj_t * parent)
lv_meter_scale_t * lv_meter_add_scale(lv_obj_t * obj)
void lv_meter_set_scale_ticks(lv_obj_t * obj, lv_meter_scale_t * scale, uint16_t cnt, uint16_t width, uint16_t len, lv_color_t color)
void lv_meter_set_scale_major_ticks(lv_obj_t * obj, lv_meter_scale_t * scale, uint16_t nth, uint16_t width, uint16_t len, lv_color_t color, int16_t label_gap)
void lv_meter_set_scale_range(lv_obj_t * obj, lv_meter_scale_t * scale, int32_t min, int32_t max, uint32_t angle_range, uint32_t rotation)
lv_meter_indicator_t * lv_meter_add_needle_line(lv_obj_t * obj, lv_meter_scale_t * scale, uint16_t width, lv_color_t color, int16_t r_mod)
lv_meter_indicator_t * lv_meter_add_needle_img(lv_obj_t * obj, lv_meter_scale_t * scale, const void * src, lv_coord_t pivot_x, lv_coord_t pivot_y)
lv_meter_indicator_t * lv_meter_add_arc(lv_obj_t * obj, lv_meter_scale_t * scale, uint16_t width, lv_color_t color, int16_t r_mod)
lv_meter_indicator_t * lv_meter_add_scale_lines(lv_obj_t * obj, lv_meter_scale_t * scale, lv_color_t color_start, lv_color_t color_end, bool local, int16_t width_mod)
void lv_meter_set_indicator_value(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t value)
void lv_meter_set_indicator_start_value(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t value)
void lv_meter_set_indicator_end_value(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t value)

// ../../lib/libesp32_lvgl/LVGL8/src/extra/widgets/msgbox/lv_msgbox.h
lv_obj_t * lv_msgbox_create(lv_obj_t * parent, const char * title, const char * txt, const char * btn_txts[], bool add_close_btn)
lv_obj_t * lv_msgbox_get_title(lv_obj_t * mbox)
lv_obj_t * lv_msgbox_get_close_btn(lv_obj_t * mbox)
lv_obj_t * lv_msgbox_get_text(lv_obj_t * mbox)
lv_obj_t * lv_msgbox_get_btns(lv_obj_t * mbox)
const char * lv_msgbox_get_active_btn_text(lv_obj_t * mbox)
void lv_msgbox_close(lv_obj_t * mbox)

// ../../lib/libesp32_lvgl/LVGL8/src/extra/widgets/spinbox/lv_spinbox.h
lv_obj_t * lv_spinbox_create(lv_obj_t * parent)
void lv_spinbox_set_value(lv_obj_t * obj, int32_t i)
void lv_spinbox_set_rollover(lv_obj_t * obj, bool b)
void lv_spinbox_set_digit_format(lv_obj_t * obj, uint8_t digit_count, uint8_t separator_position)
void lv_spinbox_set_step(lv_obj_t * obj, uint32_t step)
void lv_spinbox_set_range(lv_obj_t * obj, int32_t range_min, int32_t range_max)
bool lv_spinbox_get_rollover(lv_obj_t * obj)
int32_t lv_spinbox_get_value(lv_obj_t * obj)
int32_t lv_spinbox_get_step(lv_obj_t * obj)
void lv_spinbox_step_next(lv_obj_t * obj)
void lv_spinbox_step_prev(lv_obj_t * obj)
void lv_spinbox_increment(lv_obj_t * obj)
void lv_spinbox_decrement(lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/extra/widgets/spinner/lv_spinner.h
lv_obj_t * lv_spinner_create(lv_obj_t * parent, uint32_t time, uint32_t arc_length)

// ../../lib/libesp32_lvgl/LVGL8/src/misc/lv_style_gen.h
void lv_style_set_width(lv_style_t * style, lv_coord_t value)
void lv_style_set_min_width(lv_style_t * style, lv_coord_t value)
void lv_style_set_max_width(lv_style_t * style, lv_coord_t value)
void lv_style_set_height(lv_style_t * style, lv_coord_t value)
void lv_style_set_min_height(lv_style_t * style, lv_coord_t value)
void lv_style_set_max_height(lv_style_t * style, lv_coord_t value)
void lv_style_set_x(lv_style_t * style, lv_coord_t value)
void lv_style_set_y(lv_style_t * style, lv_coord_t value)
void lv_style_set_align(lv_style_t * style, lv_align_t value)
void lv_style_set_transform_width(lv_style_t * style, lv_coord_t value)
void lv_style_set_transform_height(lv_style_t * style, lv_coord_t value)
void lv_style_set_translate_x(lv_style_t * style, lv_coord_t value)
void lv_style_set_translate_y(lv_style_t * style, lv_coord_t value)
void lv_style_set_transform_zoom(lv_style_t * style, lv_coord_t value)
void lv_style_set_transform_angle(lv_style_t * style, lv_coord_t value)
void lv_style_set_pad_top(lv_style_t * style, lv_coord_t value)
void lv_style_set_pad_bottom(lv_style_t * style, lv_coord_t value)
void lv_style_set_pad_left(lv_style_t * style, lv_coord_t value)
void lv_style_set_pad_right(lv_style_t * style, lv_coord_t value)
void lv_style_set_pad_row(lv_style_t * style, lv_coord_t value)
void lv_style_set_pad_column(lv_style_t * style, lv_coord_t value)
void lv_style_set_radius(lv_style_t * style, lv_coord_t value)
void lv_style_set_clip_corner(lv_style_t * style, bool value)
void lv_style_set_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_color_filter_dsc(lv_style_t * style, const lv_color_filter_dsc_t * value)
void lv_style_set_color_filter_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_anim_time(lv_style_t * style, uint32_t value)
void lv_style_set_anim_speed(lv_style_t * style, uint32_t value)
void lv_style_set_transition(lv_style_t * style, const lv_style_transition_dsc_t * value)
void lv_style_set_blend_mode(lv_style_t * style, lv_blend_mode_t value)
void lv_style_set_layout(lv_style_t * style, uint16_t value)
void lv_style_set_base_dir(lv_style_t * style, lv_base_dir_t value)
void lv_style_set_bg_color(lv_style_t * style, lv_color_t value)
void lv_style_set_bg_color_filtered(lv_style_t * style, lv_color_t value)
void lv_style_set_bg_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_bg_grad_color(lv_style_t * style, lv_color_t value)
void lv_style_set_bg_grad_color_filtered(lv_style_t * style, lv_color_t value)
void lv_style_set_bg_grad_dir(lv_style_t * style, lv_grad_dir_t value)
void lv_style_set_bg_main_stop(lv_style_t * style, lv_coord_t value)
void lv_style_set_bg_grad_stop(lv_style_t * style, lv_coord_t value)
void lv_style_set_bg_img_src(lv_style_t * style, const void * value)
void lv_style_set_bg_img_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_bg_img_recolor(lv_style_t * style, lv_color_t value)
void lv_style_set_bg_img_recolor_filtered(lv_style_t * style, lv_color_t value)
void lv_style_set_bg_img_recolor_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_bg_img_tiled(lv_style_t * style, bool value)
void lv_style_set_border_color(lv_style_t * style, lv_color_t value)
void lv_style_set_border_color_filtered(lv_style_t * style, lv_color_t value)
void lv_style_set_border_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_border_width(lv_style_t * style, lv_coord_t value)
void lv_style_set_border_side(lv_style_t * style, lv_border_side_t value)
void lv_style_set_border_post(lv_style_t * style, bool value)
void lv_style_set_text_color(lv_style_t * style, lv_color_t value)
void lv_style_set_text_color_filtered(lv_style_t * style, lv_color_t value)
void lv_style_set_text_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_text_font(lv_style_t * style, const lv_font_t * value)
void lv_style_set_text_letter_space(lv_style_t * style, lv_coord_t value)
void lv_style_set_text_line_space(lv_style_t * style, lv_coord_t value)
void lv_style_set_text_decor(lv_style_t * style, lv_text_decor_t value)
void lv_style_set_text_align(lv_style_t * style, lv_text_align_t value)
void lv_style_set_img_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_img_recolor(lv_style_t * style, lv_color_t value)
void lv_style_set_img_recolor_filtered(lv_style_t * style, lv_color_t value)
void lv_style_set_img_recolor_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_outline_width(lv_style_t * style, lv_coord_t value)
void lv_style_set_outline_color(lv_style_t * style, lv_color_t value)
void lv_style_set_outline_color_filtered(lv_style_t * style, lv_color_t value)
void lv_style_set_outline_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_outline_pad(lv_style_t * style, lv_coord_t value)
void lv_style_set_shadow_width(lv_style_t * style, lv_coord_t value)
void lv_style_set_shadow_ofs_x(lv_style_t * style, lv_coord_t value)
void lv_style_set_shadow_ofs_y(lv_style_t * style, lv_coord_t value)
void lv_style_set_shadow_spread(lv_style_t * style, lv_coord_t value)
void lv_style_set_shadow_color(lv_style_t * style, lv_color_t value)
void lv_style_set_shadow_color_filtered(lv_style_t * style, lv_color_t value)
void lv_style_set_shadow_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_line_width(lv_style_t * style, lv_coord_t value)
void lv_style_set_line_dash_width(lv_style_t * style, lv_coord_t value)
void lv_style_set_line_dash_gap(lv_style_t * style, lv_coord_t value)
void lv_style_set_line_rounded(lv_style_t * style, lv_coord_t value)
void lv_style_set_line_color(lv_style_t * style, lv_color_t value)
void lv_style_set_line_color_filtered(lv_style_t * style, lv_color_t value)
void lv_style_set_line_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_arc_width(lv_style_t * style, lv_coord_t value)
void lv_style_set_arc_rounded(lv_style_t * style, lv_coord_t value)
void lv_style_set_arc_color(lv_style_t * style, lv_color_t value)
void lv_style_set_arc_color_filtered(lv_style_t * style, lv_color_t value)
void lv_style_set_arc_opa(lv_style_t * style, lv_opa_t value)
void lv_style_set_arc_img_src(lv_style_t * style, const void * value)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_arc.h
lv_obj_t * lv_arc_create(lv_obj_t * parent)
void lv_arc_set_start_angle(lv_obj_t * arc, uint16_t start)
void lv_arc_set_end_angle(lv_obj_t * arc, uint16_t end)
void lv_arc_set_angles(lv_obj_t * arc, uint16_t start, uint16_t end)
void lv_arc_set_bg_start_angle(lv_obj_t * arc, uint16_t start)
void lv_arc_set_bg_end_angle(lv_obj_t * arc, uint16_t end)
void lv_arc_set_bg_angles(lv_obj_t * arc, uint16_t start, uint16_t end)
void lv_arc_set_rotation(lv_obj_t * arc, uint16_t rotation)
void lv_arc_set_mode(lv_obj_t * arc, lv_arc_mode_t type)
void lv_arc_set_value(lv_obj_t * arc, int16_t value)
void lv_arc_set_range(lv_obj_t * arc, int16_t min, int16_t max)
void lv_arc_set_change_rate(lv_obj_t * arc, uint16_t rate)
uint16_t lv_arc_get_angle_start(lv_obj_t * obj)
uint16_t lv_arc_get_angle_end(lv_obj_t * obj)
uint16_t lv_arc_get_bg_angle_start(lv_obj_t * obj)
uint16_t lv_arc_get_bg_angle_end(lv_obj_t * obj)
int16_t lv_arc_get_value(const lv_obj_t * obj)
int16_t lv_arc_get_min_value(const lv_obj_t * obj)
int16_t lv_arc_get_max_value(const lv_obj_t * obj)
lv_arc_mode_t lv_arc_get_mode(const lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_bar.h
lv_obj_t * lv_bar_create(lv_obj_t * parent)
void lv_bar_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
void lv_bar_set_start_value(lv_obj_t * obj, int32_t start_value, lv_anim_enable_t anim)
void lv_bar_set_range(lv_obj_t * obj, int32_t min, int32_t max)
void lv_bar_set_mode(lv_obj_t * obj, lv_bar_mode_t mode)
int32_t lv_bar_get_value(const lv_obj_t * obj)
int32_t lv_bar_get_start_value(const lv_obj_t * obj)
int32_t lv_bar_get_min_value(const lv_obj_t * obj)
int32_t lv_bar_get_max_value(const lv_obj_t * obj)
lv_bar_mode_t lv_bar_get_mode(lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_btn.h
lv_obj_t * lv_btn_create(lv_obj_t * parent)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_btnmatrix.h
lv_obj_t * lv_btnmatrix_create(lv_obj_t * parent)
void lv_btnmatrix_set_map(lv_obj_t * obj, const char * map[])
void lv_btnmatrix_set_ctrl_map(lv_obj_t * obj, const lv_btnmatrix_ctrl_t ctrl_map[])
void lv_btnmatrix_set_selected_btn(lv_obj_t * obj, uint16_t btn_id)
void lv_btnmatrix_set_btn_ctrl(lv_obj_t * obj, uint16_t btn_id, lv_btnmatrix_ctrl_t ctrl)
void lv_btnmatrix_clear_btn_ctrl(const lv_obj_t * obj, uint16_t btn_id, lv_btnmatrix_ctrl_t ctrl)
void lv_btnmatrix_set_btn_ctrl_all(lv_obj_t * obj, lv_btnmatrix_ctrl_t ctrl)
void lv_btnmatrix_clear_btn_ctrl_all(lv_obj_t * obj, lv_btnmatrix_ctrl_t ctrl)
void lv_btnmatrix_set_btn_width(lv_obj_t * obj, uint16_t btn_id, uint8_t width)
void lv_btnmatrix_set_one_checked(lv_obj_t * obj, bool en)
const char ** lv_btnmatrix_get_map(const lv_obj_t * obj)
uint16_t lv_btnmatrix_get_selected_btn(const lv_obj_t * obj)
const char * lv_btnmatrix_get_btn_text(const lv_obj_t * obj, uint16_t btn_id)
bool lv_btnmatrix_has_btn_ctrl(lv_obj_t * obj, uint16_t btn_id, lv_btnmatrix_ctrl_t ctrl)
bool lv_btnmatrix_get_one_checked(const lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_canvas.h
lv_obj_t * lv_canvas_create(lv_obj_t * parent)
void lv_canvas_set_buffer(lv_obj_t * canvas, void * buf, lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)
void lv_canvas_set_px(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, lv_color_t c)
void lv_canvas_set_palette(lv_obj_t * canvas, uint8_t id, lv_color_t c)
lv_color_t lv_canvas_get_px(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y)
lv_img_dsc_t * lv_canvas_get_img(lv_obj_t * canvas)
void lv_canvas_copy_buf(lv_obj_t * canvas, const void * to_copy, lv_coord_t x, lv_coord_t y, lv_coord_t w, lv_coord_t h)
void lv_canvas_transform(lv_obj_t * canvas, lv_img_dsc_t * img, int16_t angle, uint16_t zoom, lv_coord_t offset_x, lv_coord_t offset_y, int32_t pivot_x, int32_t pivot_y, bool antialias)
void lv_canvas_blur_hor(lv_obj_t * canvas, const lv_area_t * area, uint16_t r)
void lv_canvas_blur_ver(lv_obj_t * canvas, const lv_area_t * area, uint16_t r)
void lv_canvas_fill_bg(lv_obj_t * canvas, lv_color_t color, lv_opa_t opa)
void lv_canvas_draw_rect(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, lv_coord_t w, lv_coord_t h, const lv_draw_rect_dsc_t * draw_dsc)
void lv_canvas_draw_text(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, lv_coord_t max_w, lv_draw_label_dsc_t * draw_dsc, const char * txt)
void lv_canvas_draw_img(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, const void * src, const lv_draw_img_dsc_t * draw_dsc)
void lv_canvas_draw_line(lv_obj_t * canvas, const lv_point_t points[], uint32_t point_cnt, const lv_draw_line_dsc_t * draw_dsc)
void lv_canvas_draw_polygon(lv_obj_t * canvas, const lv_point_t points[], uint32_t point_cnt, const lv_draw_rect_dsc_t * draw_dsc)
void lv_canvas_draw_arc(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, lv_coord_t r, int32_t start_angle, int32_t end_angle, const lv_draw_arc_dsc_t * draw_dsc)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_checkbox.h
lv_obj_t * lv_checkbox_create(lv_obj_t * parent)
void lv_checkbox_set_text(lv_obj_t * obj, const char * txt)
void lv_checkbox_set_text_static(lv_obj_t * obj, const char * txt)
const char * lv_checkbox_get_text(const lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_dropdown.h
lv_obj_t * lv_dropdown_create(lv_obj_t * parent)
void lv_dropdown_set_text(lv_obj_t * obj, const char * txt)
void lv_dropdown_set_options(lv_obj_t * obj, const char * options)
void lv_dropdown_set_options_static(lv_obj_t * obj, const char * options)
void lv_dropdown_add_option(lv_obj_t * obj, const char * option, uint32_t pos)
void lv_dropdown_clear_options(lv_obj_t * obj)
void lv_dropdown_set_selected(lv_obj_t * obj, uint16_t sel_opt)
void lv_dropdown_set_dir(lv_obj_t * obj, lv_dir_t dir)
void lv_dropdown_set_symbol(lv_obj_t * obj, const void * symbol)
void lv_dropdown_set_selected_highlight(lv_obj_t * obj, bool en)
lv_obj_t * lv_dropdown_get_list(lv_obj_t * obj)
const char * lv_dropdown_get_text(lv_obj_t * obj)
const char * lv_dropdown_get_options(const lv_obj_t * obj)
uint16_t lv_dropdown_get_selected(const lv_obj_t * obj)
uint16_t lv_dropdown_get_option_cnt(const lv_obj_t * obj)
void lv_dropdown_get_selected_str(const lv_obj_t * obj, char * buf, uint32_t buf_size)
const char * lv_dropdown_get_symbol(lv_obj_t * obj)
bool lv_dropdown_get_selected_highlight(lv_obj_t * obj)
lv_dir_t lv_dropdown_get_dir(const lv_obj_t * obj)
void lv_dropdown_open(lv_obj_t * dropdown_obj)
void lv_dropdown_close(lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_img.h
lv_obj_t * lv_img_create(lv_obj_t * parent)
void lv_img_set_src(lv_obj_t * obj, const void * src)
void lv_img_set_offset_x(lv_obj_t * obj, lv_coord_t x)
void lv_img_set_offset_y(lv_obj_t * obj, lv_coord_t y)
void lv_img_set_angle(lv_obj_t * obj, int16_t angle)
void lv_img_set_pivot(lv_obj_t * obj, lv_coord_t x, lv_coord_t y)
void lv_img_set_zoom(lv_obj_t * obj, uint16_t zoom)
void lv_img_set_antialias(lv_obj_t * obj, bool antialias)
const void * lv_img_get_src(lv_obj_t * obj)
lv_coord_t lv_img_get_offset_x(lv_obj_t * obj)
lv_coord_t lv_img_get_offset_y(lv_obj_t * obj)
uint16_t lv_img_get_angle(lv_obj_t * obj)
void lv_img_get_pivot(lv_obj_t * obj, lv_point_t * pivot)
uint16_t lv_img_get_zoom(lv_obj_t * obj)
bool lv_img_get_antialias(lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_label.h
lv_obj_t * lv_label_create(lv_obj_t * parent)
void lv_label_set_text(lv_obj_t * obj, const char * text)
void lv_label_set_text_fmt(lv_obj_t * obj, const char * fmt, ...) LV_FORMAT_ATTRIBUTE(2, 3)
void lv_label_set_text_static(lv_obj_t * obj, const char * text)
void lv_label_set_long_mode(lv_obj_t * obj, lv_label_long_mode_t long_mode)
void lv_label_set_recolor(lv_obj_t * obj, bool en)
void lv_label_set_text_sel_start(lv_obj_t * obj, uint32_t index)
void lv_label_set_text_sel_end(lv_obj_t * obj, uint32_t index)
char * lv_label_get_text(const lv_obj_t * obj)
lv_label_long_mode_t lv_label_get_long_mode(const lv_obj_t * obj)
bool lv_label_get_recolor(const lv_obj_t * obj)
void lv_label_get_letter_pos(const lv_obj_t * obj, uint32_t char_id, lv_point_t * pos)
uint32_t lv_label_get_letter_on(const lv_obj_t * obj, lv_point_t * pos_in)
bool lv_label_is_char_under_pos(const lv_obj_t * obj, lv_point_t * pos)
uint32_t lv_label_get_text_selection_start(const lv_obj_t * obj)
uint32_t lv_label_get_text_selection_end(const lv_obj_t * obj)
void lv_label_ins_text(lv_obj_t * obj, uint32_t pos, const char * txt)
void lv_label_cut_text(lv_obj_t * obj, uint32_t pos, uint32_t cnt)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_line.h
lv_obj_t * lv_line_create(lv_obj_t * parent)
void lv_line_set_points(lv_obj_t * obj, const lv_point_t points[], uint16_t point_num)
void lv_line_set_y_invert(lv_obj_t * obj, bool en)
bool lv_line_get_y_invert(const lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_objx_templ.h

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_roller.h
lv_obj_t * lv_roller_create(lv_obj_t * parent)
void lv_roller_set_options(lv_obj_t * obj, const char * options, lv_roller_mode_t mode)
void lv_roller_set_selected(lv_obj_t * obj, uint16_t sel_opt, lv_anim_enable_t anim)
void lv_roller_set_visible_row_count(lv_obj_t * obj, uint8_t row_cnt)
uint16_t lv_roller_get_selected(const lv_obj_t * obj)
void lv_roller_get_selected_str(const lv_obj_t * obj, char * buf, uint32_t buf_size)
const char * lv_roller_get_options(const lv_obj_t * obj)
uint16_t lv_roller_get_option_cnt(const lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_slider.h
lv_obj_t * lv_slider_create(lv_obj_t * parent)
static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)
static inline int32_t lv_slider_get_value(const lv_obj_t * obj)
static inline int32_t lv_slider_get_left_value(const lv_obj_t * obj)
static inline int32_t lv_slider_get_min_value(const lv_obj_t * obj)
static inline int32_t lv_slider_get_max_value(const lv_obj_t * obj)
bool lv_slider_is_dragged(const lv_obj_t * obj)
static inline lv_slider_mode_t lv_slider_get_mode(lv_obj_t * slider)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_switch.h
lv_obj_t * lv_switch_create(lv_obj_t * parent)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_table.h
lv_obj_t * lv_table_create(lv_obj_t * parent)
void lv_table_set_cell_value(lv_obj_t * obj, uint16_t row, uint16_t col, const char * txt)
void lv_table_set_cell_value_fmt(lv_obj_t * obj, uint16_t row, uint16_t col, const char * fmt, ...)
void lv_table_set_row_cnt(lv_obj_t * obj, uint16_t row_cnt)
void lv_table_set_col_cnt(lv_obj_t * obj, uint16_t col_cnt)
void lv_table_set_col_width(lv_obj_t * obj, uint16_t col_id, lv_coord_t w)
void lv_table_add_cell_ctrl(lv_obj_t * obj, uint16_t row, uint16_t col, lv_table_cell_ctrl_t ctrl)
void lv_table_clear_cell_ctrl(lv_obj_t * obj, uint16_t row, uint16_t col, lv_table_cell_ctrl_t ctrl)
const char * lv_table_get_cell_value(lv_obj_t * obj, uint16_t row, uint16_t col)
uint16_t lv_table_get_row_cnt(lv_obj_t * obj)
uint16_t lv_table_get_col_cnt(lv_obj_t * obj)
lv_coord_t lv_table_get_col_width(lv_obj_t * obj, uint16_t col)
bool lv_table_has_cell_ctrl(lv_obj_t * obj, uint16_t row, uint16_t col, lv_table_cell_ctrl_t ctrl)
void lv_table_get_selected_cell(lv_obj_t * obj, uint16_t * row, uint16_t * col)

// ../../lib/libesp32_lvgl/LVGL8/src/widgets/lv_textarea.h
lv_obj_t * lv_textarea_create(lv_obj_t * parent)
void lv_textarea_add_char(lv_obj_t * obj, uint32_t c)
void lv_textarea_add_text(lv_obj_t * obj, const char * txt)
void lv_textarea_del_char(lv_obj_t * obj)
void lv_textarea_del_char_forward(lv_obj_t * obj)
void lv_textarea_set_text(lv_obj_t * obj, const char * txt)
void lv_textarea_set_placeholder_text(lv_obj_t * obj, const char * txt)
void lv_textarea_set_cursor_pos(lv_obj_t * obj, int32_t pos)
void lv_textarea_set_cursor_click_pos(lv_obj_t * obj, bool en)
void lv_textarea_set_password_mode(lv_obj_t * obj, bool en)
void lv_textarea_set_one_line(lv_obj_t * obj, bool en)
void lv_textarea_set_accepted_chars(lv_obj_t * obj, const char * list)
void lv_textarea_set_max_length(lv_obj_t * obj, uint32_t num)
void lv_textarea_set_insert_replace(lv_obj_t * obj, const char * txt)
void lv_textarea_set_text_selection(lv_obj_t * obj, bool en)
void lv_textarea_set_password_show_time(lv_obj_t * obj, uint16_t time)
void lv_textarea_set_align(lv_obj_t * obj, lv_text_align_t align)
const char * lv_textarea_get_text(const lv_obj_t * obj)
const char * lv_textarea_get_placeholder_text(lv_obj_t * obj)
lv_obj_t * lv_textarea_get_label(const lv_obj_t * obj)
uint32_t lv_textarea_get_cursor_pos(const lv_obj_t * obj)
bool lv_textarea_get_cursor_click_pos(lv_obj_t * obj)
bool lv_textarea_get_password_mode(const lv_obj_t * obj)
bool lv_textarea_get_one_line(const lv_obj_t * obj)
const char * lv_textarea_get_accepted_chars(lv_obj_t * obj)
uint32_t lv_textarea_get_max_length(lv_obj_t * obj)
bool lv_textarea_text_is_selected(const lv_obj_t * obj)
bool lv_textarea_get_text_selection(lv_obj_t * obj)
uint16_t lv_textarea_get_password_show_time(lv_obj_t * obj)
void lv_textarea_clear_selection(lv_obj_t * obj)
void lv_textarea_cursor_right(lv_obj_t * obj)
void lv_textarea_cursor_left(lv_obj_t * obj)
void lv_textarea_cursor_down(lv_obj_t * obj)
void lv_textarea_cursor_up(lv_obj_t * obj)

// ../../lib/libesp32_lvgl/LVGL_assets/src/lv_theme_openhasp.h
lv_theme_t * lv_theme_openhasp_init(lv_disp_t * disp, lv_color_t color_primary, lv_color_t color_secondary, bool dark, const lv_font_t * font)
bool lv_theme_openhasp_is_inited(void)

